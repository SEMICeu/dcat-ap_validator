PREFIX adms: <http://www.w3.org/ns/adms#>
PREFIX dcat: <http://www.w3.org/ns/dcat#>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>
PREFIX schema: <http://schema.org/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX spdx: <http://spdx.org/rdf/terms#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>
SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message (?s AS ?Subject) (?p AS ?Predicate) (?o AS ?Object)
WHERE{
GRAPH <@@@TOKEN-GRAPH@@@> {
# Rule_ID:0
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a foaf:Agent.
     FILTER(!EXISTS {?s foaf:name ?name}).
     BIND (rdf:type AS ?p).
     BIND (foaf:Agent AS ?o).
     BIND ("Agent" AS ?Class_Name).
     BIND (0 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("Name is a required property for Agent." AS ?Rule_Description).
     BIND (concat("The agent  ",str(?o)," does not have a foaf:name property.") AS ?Message).
   }
  }

UNION
# Rule_ID:1
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a foaf:Agent.
     ?s foaf:name ?o.
     FILTER(!isLiteral(?o)).
     BIND (foaf:name AS ?p)
     BIND ("Agent" AS ?Class_Name).
     BIND (1 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("The foaf:name property should be a literal." AS ?Rule_Description).
     BIND (concat("The property ",str(?p)," is not a literal.") AS ?Message).
   }
  }

UNION
# Rule_ID:2
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a foaf:Agent.
     FILTER(!EXISTS {?s dct:type ?type}).
     BIND (rdf:type AS ?p).
     BIND (foaf:Agent AS ?o).
     BIND ("Agent" AS ?Class_Name).
     BIND (2 AS ?Rule_ID).
     BIND ("warning" AS ?Rule_Severity).
     BIND ("Type is a recommended property for Agent." AS ?Rule_Description).
     BIND (concat("The agent ",str(?o)," does not have a type property.") AS ?Message).
   }
  }

UNION
# Rule_ID:3
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a foaf:Agent.
     ?s dct:type ?o.
     FILTER(!isURI(?o)).
     BIND (dct:type AS ?p)
     BIND ("Agent" AS ?Class_Name).
     BIND (3 AS ?Rule_ID).
     BIND ("warning" AS ?Rule_Severity).
     BIND ("Type should be a resource" AS ?Rule_Description).
     BIND (concat("The foaf:Agent ",str(?s)," should have a dct:type as rdf:resource.") AS ?Message).
   }
  }

UNION
# Rule_ID:4
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     FILTER(!(EXISTS { ?s dcat:dataset ?ds})).
     BIND(rdf:type AS ?p).
     BIND(dcat:Catalog AS ?o).
     BIND ("Catalog" AS ?Class_Name).
     BIND (4 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dcat:dataset is a required property for Catalog" AS ?Rule_Description).
     BIND (concat("The dcat:Catalog ",str(?o)," should have a dcat:dataset property") AS ?Message).
   }
  }

UNION
# Rule_ID:5
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     ?s dcat:dataset ?o.
     FILTER(!EXISTS {?o a dcat:Dataset}).
     BIND ("Catalog" AS ?Class_Name).
     BIND (5 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dcat:dataset should be a Dataset" AS ?Rule_Description).
     BIND (concat("The dcat:Catalog ",str(?s)," has a ",str(?o)," which is not a dcat:Dataset") AS ?Message).
   }
  }

UNION
# Rule_ID:6
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     FILTER(!(EXISTS { ?s dct:description ?desc})).
     BIND(rdf:type AS ?p).
     BIND(dcat:Catalog AS ?o).
     BIND ("Catalog" AS ?Class_Name).
     BIND (6 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:description is a required property for Catalog." AS ?Rule_Description).
     BIND (concat("The dcat:Catalog ",str(?s)," does not have a dct:description.") AS ?Message).
   }
  }
 
UNION
# Rule_ID:7
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     ?s dct:description ?o.
     FILTER(!isLiteral(?o)).
     BIND (dct:description AS ?p).
     BIND ("Catalog" AS ?Class_Name).
     BIND (7 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:description should be a literal." AS ?Rule_Description).
     BIND (concat("The dct:description ",str(?o)," is not a literal.") AS ?Message).
   }
  }
 
UNION
# Rule_ID:8
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     FILTER(!(EXISTS { ?s dct:publisher ?pub})).
     BIND (rdf:type AS ?p).
     BIND (dcat:Catalog AS ?o).
     BIND ("Catalog" AS ?Class_Name).
     BIND (8 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:publisher is a required property for Catalog." AS ?Rule_Description).
     BIND (concat("The dcat:Catalog ",str(?o)," does not have dct:publisher property.") AS ?Message).
   }
  }

UNION
# Rule_ID:9
  {SELECT ("Catalog" AS ?Class_Name) (9 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:publisher has maximum cardinality of 1 for Catalog." AS ?Rule_Description) (concat("The dcat:Catalog ",str(?s)," has more than 1 dct:publisher.") AS ?Message) ?s
   WHERE {
     ?s a dcat:Catalog.
     ?s dct:publisher ?pub.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:11
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     ?s dct:publisher ?o.
     FILTER(!EXISTS {?o a foaf:Agent}).
     BIND ("Catalog" AS ?Class_Name).
     BIND (11 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:publisher should be a foaf:Agent." AS ?Rule_Description).
     BIND (concat("The dct:publisher ",str(?o)," is not a foaf:Agent.") AS ?Message).
   }
  }

UNION
# Rule_ID:12
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     FILTER(!(EXISTS { ?s dct:title ?title})).
     BIND (rdf:type AS ?p).
     BIND (dcat:Catalog AS ?o).
     BIND ("Catalog" AS ?Class_Name).
     BIND (12 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:title is a required property for Catalog." AS ?Rule_Description).
     BIND (concat("The Catalog ", str(?o)," does not have a dct:title.") AS ?Message).
   }
 }

UNION
# Rule_ID:13
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     ?s dct:title ?o.
     FILTER(!isLiteral(?o)).
     BIND ( dct:title AS ?p).
     BIND ("Catalog" AS ?Class_Name).
     BIND (13 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:title should be a literal." AS ?Rule_Description).
     BIND (concat("The dct:title ",str(?o)," is not a literal.") AS ?Message).
   }
 }
 
UNION
# Rule_ID:14
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     FILTER(!(EXISTS { ?s foaf:homepage ?homepage})).
     BIND (rdf:type AS ?p).
     BIND (dcat:Catalog AS ?o).
     BIND ("Catalog" AS ?Class_Name).
     BIND (14 AS ?Rule_ID).
     BIND ("warning" AS ?Rule_Severity).
     BIND ("foaf:homepage is a recommended property for Catalog." AS ?Rule_Description).
     BIND ("The dcat:Catalog " + str(?o) + " does not have a foaf:homepage." AS ?Message).
   }
  }

UNION
# Rule_ID:15
  {SELECT ("Catalog" AS ?Class_Name) (15 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("foaf:homepage has maximum cardinality of 1 for Catalog." AS ?Rule_Description) (concat("The dcat:Catalog ", str(?s)," has more than 1 foaf:homepage.") AS ?Message) ?s
   WHERE {
     ?s a dcat:Catalog.
     ?s foaf:homepage ?home.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:17
  {SELECT DISTINCT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     ?s foaf:homepage ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a foaf:Document}).
     BIND (foaf:homepage AS ?p).
     BIND ("Catalog" AS ?Class_Name).
     BIND (17 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("foaf:homepage should be a foaf:Document." AS ?Rule_Description).
     BIND (concat("The foaf:homepage ",str(?o)," is not a foaf:Document.") AS ?Message).
   }
  }

UNION
# Rule_ID:18
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     FILTER(!EXISTS {?s dct:language ?o.}).
     BIND (dct:language AS ?p).
     BIND ("Catalog" AS ?Class_Name).
     BIND (18 AS ?Rule_ID).
     BIND ("warning" AS ?Rule_Severity).
     BIND ("dct:language is a recommended property for Catalog." AS ?Rule_Description).
     BIND (concat("The dcat:Catalog ",str(?s)," does not have the property dct:language.") AS ?Message).
   }
  }

UNION
# Rule_ID:20
  {SELECT DISTINCT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     ?s dct:language ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a dct:LinguisticSystem}).
     BIND ("Catalog" AS ?Class_Name).
     BIND (20 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:language should be a dct:LinguisticSystem." AS ?Rule_Description).
     BIND (concat("The dct:language ",str(?o)," is not a dct:LinguisticSystem.") AS ?Message).
   }
  }
 
UNION
# Rule_ID:21
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     FILTER(!(EXISTS { ?s dct:license ?desc})).
     BIND (rdf:type AS ?p).
     BIND (dcat:Catalog AS ?o).
     BIND ("Catalog" AS ?Class_Name).
     BIND (21 AS ?Rule_ID).
     BIND ("warning" AS ?Rule_Severity).
     BIND ("dct:license is a recommended property for Catalog." AS ?Rule_Description).
     BIND (concat("The dcat:Catalog ",str(?o)," does not have dct:license.") AS ?Message).  
   }
  }

UNION
# Rule_ID:23
  {SELECT ("Catalog" AS ?Class_Name) (23 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:license has a maximum cardinality of 1." AS ?Rule_Description) (concat("The dcat:Catalog ", str(?s)," has more than 1 dct:license.") AS ?Message) ?s
   WHERE {
     ?s a dcat:Catalog.
     ?s dct:license ?lic.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:24
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     FILTER(!(EXISTS { ?s dct:issued ?desc})).
     BIND (rdf:type AS ?p).
     BIND (dcat:Catalog AS ?o).
     BIND ("Catalog" AS ?Class_Name).
     BIND (24 AS ?Rule_ID).
     BIND ("warning" AS ?Rule_Severity).
     BIND ("dct:issued is a recommended property for Catalog." AS ?Rule_Description).
     BIND (concat("The dcat:Catalog ",str(?o)," does not have a dct:issued property.") AS ?Message).
   }
  }

UNION
# Rule_ID:25
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     ?s dct:issued ?o.
     FILTER(!isLiteral(?o)).
     BIND (dct:issued AS ?p).
     BIND ("Catalog" AS ?Class_Name).
     BIND (25 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:issued should be literal." AS ?Rule_Description).
     BIND (concat("The dct:issue ",str(?o)," is not a literal.") AS ?Message).
   }
  }

UNION
# Rule_ID:26
  {SELECT ("Catalog" AS ?Class_Name) (26 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:issued has maximum cardinality of 1 for Catalog." AS ?Rule_Description) (concat("The dcat:Catalog ", str(?s)," has more than 1 dct:issued.") AS ?Message) ?s
   WHERE {
     ?s a dcat:Catalog.
     ?s dct:issued ?issued.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:27
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     FILTER(!(EXISTS { ?s dcat:themeTaxonomy ?taxonomy})).
     BIND (rdf:type AS ?p).
     BIND (dcat:Catalog AS ?o).
     BIND ("Catalog" AS ?Class_Name).
     BIND (27 AS ?Rule_ID).
     BIND ("warning" AS ?Rule_Severity).
     BIND ("dcat:themeTaxonomy is a recommended property for Catalog." AS ?Rule_Description).
     BIND (concat("The dcat:Catalog ",str(?o)," does not have a dcat:themeTaxonomy property.") AS ?Message).
   }
  }

UNION
# Rule_ID:30
  {SELECT DISTINCT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     ?s dcat:record ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a dcat:CatalogRecord}).
     BIND (dcat:themeTaxonomy AS ?p).
     BIND ("Catalog" AS ?Class_Name).
     BIND (30 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dcat:catalogRecord should be a CatalogRecord." AS ?Rule_Description).
     BIND (concat("The dcat:catalogRecord ",str(?o)," is not a CatalogRecord.") AS ?Message).
   }
  }

UNION
# Rule_ID:31
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     FILTER(!(EXISTS { ?s dct:modified ?desc})).
     BIND (rdf:type AS ?p).
     BIND (dcat:Catalog AS ?o).
     BIND ("Catalog" AS ?Class_Name).
     BIND (31 AS ?Rule_ID).
     BIND ("warning" AS ?Rule_Severity).
     BIND ("dct:modified is a recommended property for Catalog." AS ?Rule_Description).
     BIND (concat("The dcat:Catalog ",str(?o)," does not have a dct:modified property.") AS ?Message).
   }
  }

UNION
# Rule_ID:32
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     ?s dct:modified ?o.
     BIND (dct:modified AS ?p).
     BIND(datatype(?o) AS ?datatype)
     FILTER (?datatype != xsd:dateTime && ?datatype != xsd:date)
     BIND ("Catalog" AS ?Class_Name).
     BIND (32 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:modified should be a literal." AS ?Rule_Description).
     BIND (concat("The dct:modified ",str(?o)," is not a literal.") AS ?Message).
}
 }

UNION
# Rule_ID:33
  {SELECT ("Catalog" AS ?Class_Name) (33 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:modified has maximum cardinality of 1 for Catalog." AS ?Rule_Description) (concat("The dcat:Catalog ", str(?s)," has more than 1 dct:modified.") AS ?Message) ?s
   WHERE {
     ?s a dcat:Catalog.
     ?s dct:modified ?modified.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:34
  {SELECT DISTINCT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     ?s dct:rights ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a dct:RightsStatement}).
     BIND (dct:rights AS ?p).
     BIND ("Catalog" AS ?Class_Name).
     BIND (34 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:rights should be a dct:RightsStatement." AS ?Rule_Description).
     BIND (concat("The dct:rights ",str(?o)," is not a dct:RightsStatement.") AS ?Message).
   }
  }
 
UNION
# Rule_ID:35
  {SELECT ("Catalog" AS ?Class_Name) (35 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:rights has maximum cardinality of 1 for Catalog." AS ?Rule_Description) (concat("The dcat:Catalog ", str(?s)," has more than 1 dct:rights.") AS ?Message) ?s
   WHERE {
     ?s a dcat:Catalog.
     ?s dct:rights ?rights.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:36
  {SELECT DISTINCT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s (dct:spatial as ?p) ?o 
   WHERE {
     ?s a dcat:Catalog.
     ?s dct:spatial ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a dct:Location}).
     BIND ("Catalog" AS ?Class_Name).
     BIND (36 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:spatial should be a dct:Location." AS ?Rule_Description).
     BIND (concat("The dct:spatial ",str(?o)," is not a dct:Location.") AS ?Message).
   }
  }

UNION
# Rule_ID:37
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Dataset.
     FILTER(!(EXISTS { ?s dct:description ?desc})).
     BIND (rdf:type AS ?p).
     BIND (dcat:Dataset AS ?o).
     BIND ("Dataset" AS ?Class_Name).
     BIND (37 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:description is a required property for Dataset." AS ?Rule_Description).
     BIND (concat("The dcat:Dataset ",str(?o)," does not have a dct:description property.") AS ?Message).
   }
  }

UNION
# Rule_ID:38
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Dataset.
     ?s dct:description ?o.
     FILTER(!isLiteral(?o)).
     BIND (dct:description AS ?p).
     BIND ("Dataset" AS ?Class_Name).
     BIND (38 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:description should be a literal." AS ?Rule_Description).
     BIND (concat("The dcat:description ",str(?p)," is not a literal.") AS ?Message).
   }
  }

UNION
# Rule_ID:39
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Dataset.
     FILTER(!(EXISTS { ?s dct:title ?title})).
     BIND (rdf:type AS ?p).
     BIND (dcat:Dataset AS ?o).
     BIND ("Dataset" AS ?Class_Name).
     BIND (39 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:title is a required property for Dataset." AS ?Rule_Description).
     BIND (concat("The dcat:Dataset ",str(?o)," does not have a dct:title property.") AS ?Message).
   }
  }
  
UNION
# Rule_ID:40
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Dataset.
     ?s dct:title ?o.
     FILTER(!isLiteral(?o)).
     BIND (dct:title AS ?p).
     BIND ("Dataset" AS ?Class_Name).
     BIND (40 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:title should be a literal." AS ?Rule_Description).
     BIND (concat("The dct:title property ",str(?p)," is not a literal.") AS ?Message).
   }
  }

UNION
# Rule_ID:41
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Dataset.
     FILTER(!(EXISTS { ?s adms:contactPoint ?cPoint})).
     BIND (rdf:type AS ?p).
     BIND (dcat:Dataset AS ?o).
     BIND ("Dataset" AS ?Class_Name).
     BIND (41 AS ?Rule_ID).
     BIND ("warning" AS ?Rule_Severity).
     BIND ("adms:contactPoint is a recommended property for Dataset." AS ?Rule_Description).
     BIND (concat("The dcat:Dataset ",str(?s)," does not have a adms:contactPoint property.") AS ?Message).
   }
  }

UNION
# Rule_ID:42
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Dataset.
     ?s adms:contactPoint ?o.
     FILTER(!isURI(?o) && !isBlank(?o)).
     BIND (adms:contactPoint AS ?p).
     BIND ("Dataset" AS ?Class_Name).
     BIND (42 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("adms:contactPoint should be a resource." AS ?Rule_Description).
     BIND (concat("The adms:contactPoint ",str(?o)," is not a resource.") AS ?Message).
   }
  }

UNION
# Rule_ID:43
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Dataset.
     ?s adms:contactPoint ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a <http://www.w3.org/2006/vcard/ns#VCard>}).
     BIND (adms:contactPoint AS ?p).
     BIND ("Dataset" AS ?Class_Name).
     BIND (43 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("adms:contactPoint should be a vCard." AS ?Rule_Description).
     BIND (concat("The adms:contactPoint ",str(?p)," is not a vCard.") AS ?Message).
   }
  }

UNION
# Rule_ID:44
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Dataset.
     FILTER(!(EXISTS { ?s dcat:distribution ?dist})).
     BIND (rdf:type AS ?p).
     BIND (dcat:Dataset AS ?o).
     BIND ("Dataset" AS ?Class_Name).
     BIND (44 AS ?Rule_ID).
     BIND ("warning" AS ?Rule_Severity).
     BIND ("dcat:distribution is a recommended property for Dataset." AS ?Rule_Description).
     BIND (concat("The dcat:Dataset ",str(?o)," does not have a dcat:distribution property.") AS ?Message).
   }
  }

UNION
# Rule_ID:46
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Dataset.
     ?s dcat:distribution ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a dcat:Distribution}).
     BIND (dcat:distribution AS ?p).
     BIND ("Dataset" AS ?Class_Name).
     BIND (46 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dcat:distribution should be a Distribution." AS ?Rule_Description).
     BIND (concat("The dcat:distribution ",str(?o)," is not a distribution.") AS ?Message).
   }
  }

UNION
# Rule_ID:47
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Dataset.
     FILTER(!(EXISTS { ?s dcat:keyword ?key})).
     BIND (rdf:type AS ?p).
     BIND (dcat:Dataset AS ?o).
     BIND ("Dataset" AS ?Class_Name).
     BIND (47 AS ?Rule_ID).
     BIND ("warning" AS ?Rule_Severity).
     BIND ("dcat:keyword is a recommended property for Dataset." AS ?Rule_Description).
     BIND (concat("The dcat:Dataset ",str(?o)," does not have a dcat:keyword property.") AS ?Message).
   }
  }

UNION
# Rule_ID:48
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Dataset.
     ?s dcat:keyword ?o.
     FILTER(!isLiteral(?o)).
     BIND (dcat:keyword AS ?p).
     BIND ("Dataset" AS ?Class_Name).
     BIND (48 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dcat:keyword should be a literal." AS ?Rule_Description).
     BIND (concat("The dcat:keyword ",str(?o)," is not a literal.") AS ?Message).
   }
  }

UNION
# Rule_ID:49
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Dataset.
     FILTER(!(EXISTS { ?s dct:publisher ?pub})).
     BIND (rdf:type AS ?p).
     BIND (dcat:Dataset AS ?o).
     BIND ("Dataset" AS ?Class_Name).
     BIND (49 AS ?Rule_ID).
     BIND ("warning" AS ?Rule_Severity).
     BIND ("dct:publisher is a recommended property for Dataset." AS ?Rule_Description).
     BIND (concat("The dcat:Dataset ",str(?o)," does not have a dct:publisher property.") AS ?Message).
   }
  }

UNION
# Rule_ID:50
  {SELECT ("Dataset" AS ?Class_Name) (50 AS ?Rule_ID) ("warning" AS ?Rule_Severity) ("dct:publisher has maximum cardinality of 1 for Dataset." AS ?Rule_Description) (concat("The dcat:Dataset ",str(?s)," has more than 1 dct:publisher property.") AS ?Message) ?s (rdf:type AS ?p) (dcat:Dataset AS ?o)
   WHERE {
     ?s a dcat:Dataset.
     ?s dct:publisher ?pub.
   } GROUP BY ?s
     HAVING (COUNT( ?pub) > 1)
  }

UNION
# Rule_ID:51
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s (dct:publisher as ?p) ?o 
   WHERE {
     ?s a dcat:Dataset.
     ?s dct:publisher ?o.
     FILTER(!isURI(?o)).
     BIND ("Dataset" AS ?Class_Name).
     BIND (51 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:publisher should be a resource." AS ?Rule_Description).
     BIND (concat("The dct:publisher ",str(?o)," is not a resource.") AS ?Message).
   }
  }
  
UNION
# Rule_ID:52
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s (dct:publisher as ?p) ?o 
   WHERE {
     ?s a dcat:Dataset.
     ?s dct:publisher ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a foaf:Agent}).
     BIND ("Dataset" AS ?Class_Name).
     BIND (52 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:publisher should be a foaf:Agent." AS ?Rule_Description).
     BIND (concat("The dct:publisher ",str(?o)," is not a foaf:Agent.") AS ?Message).
   }
  }

UNION
# Rule_ID:53
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a dcat:Dataset.
     FILTER(!(EXISTS { ?s dcat:theme ?theme})).
     BIND (rdf:type AS ?p).
     BIND (dcat:Dataset AS ?o).
     BIND ("Dataset" AS ?Class_Name).
     BIND (53 AS ?Rule_ID).
     BIND ("warning" AS ?Rule_Severity).
     BIND ("dcat:theme is a recommended property for Dataset." AS ?Rule_Description).
     BIND (concat("The dcat:Dataset ",str(?o)," does not have a dcat:theme property.") AS ?Message).
   }
  }

UNION
# Rule_ID:54
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a dcat:Dataset.
     ?s dcat:theme ?o.
     FILTER(!isURI(?o)).
     BIND (dcat:theme AS ?p).
     BIND ("Dataset" AS ?Class_Name).
     BIND (54 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dcat:theme should be a resource." AS ?Rule_Description).
     BIND (concat("The dcat:theme ",str(?o)," is not a resource.") AS ?Message).
   }
  }

UNION
# Rule_ID:55
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a dcat:Dataset.
     ?s dct:conformsTo ?o.
     FILTER(!isURI(?o)).
     BIND (dct:conformsTo AS ?p).
     BIND ("Dataset" AS ?Class_Name).
     BIND (55 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:conformsTo should be a resource." AS ?Rule_Description).
     BIND (concat("The dcat:conformsTo ",str(?o)," is not a resource.") AS ?Message).
   }
  }

UNION
# Rule_ID:56
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s (dct:conformsTo as ?p) ?o 
   WHERE {
     ?s a dcat:Dataset.
     ?s dct:conformsTo ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a dct:Standard}).
     BIND ("Dataset" AS ?Class_Name).
     BIND (56 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:conformsTo should be a dct:Standard." AS ?Rule_Description).
     BIND (concat("The dcat:conformsTo ",str(?o)," is not a dct:Standard.") AS ?Message).
   }
  }

UNION
# Rule_ID:58
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s (dct:accrualPeriodicity as ?p) ?o 
   WHERE {
     ?s a dcat:Dataset.
     ?s dct:accrualPeriodicity ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a dct:Frequency}).
     BIND ("Dataset" AS ?Class_Name).
     BIND (58 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:accrualPeriodicity should be a dct:Frequency." AS ?Rule_Description).
     BIND (concat("The dcat:Dataset ",str(?s)," has a dct:accrualPeriodicity property which is not a dct:Frequency.") AS ?Message).
   }
  }
  
UNION
# Rule_ID:59
  {SELECT ("Dataset" AS ?Class_Name) (59 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:accrualPeriodicity has maximum cardinality of 1 for Dataset." AS ?Rule_Description) (concat("The dcat:Dataset ",str(?s)," has more than 1 dct:accrualPeriodicity.") AS ?Message) ?s (rdf:type AS ?p) (dcat:Dataset AS ?o)
   WHERE {
     ?s a dcat:Dataset.
     ?s dct:accrualPeriodicity ?period.
   } GROUP BY ?s 
     HAVING (COUNT( ?period) > 1)
  }
  
UNION
# Rule_ID:60
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Dataset.
     ?s dct:identifier ?o.
     FILTER(!isLiteral(?o)).
     BIND (dct:identifier AS ?p).
     BIND ("Dataset" AS ?Class_Name).
     BIND (60 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:identifier should be a literal." AS ?Rule_Description).
     BIND (concat("The dct:identifier ",str(?p)," is not a literal.") AS ?Message).
   }
  }

UNION
# Rule_ID:61
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Dataset.
     ?s dcat:landingPage ?o.
     FILTER(!isURI(?o)).
     BIND (dcat:landingPage AS ?p).
     BIND ("Dataset" AS ?Class_Name).
     BIND (61 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dcat:landingPage should be a resource." AS ?Rule_Description).
     BIND (concat("The dcat:landingPage ",str(?p)," is not a resource.") AS ?Message).
   }
  }

UNION
# Rule_ID:62
  {SELECT ("Dataset" AS ?Class_Name) (62 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dcat:landingPage has maximum cardinality of 1 for Dataset." AS ?Rule_Description) (concat("The dcat:Dataset ",str(?s)," has more than 1 dcat:landingPage.") AS ?Message) ?s (rdf:type AS ?p) (dcat:Dataset AS ?o)
   WHERE {
     ?s a dcat:Dataset.
     ?s dcat:landingPage ?page.
   } GROUP BY ?s 
     HAVING (COUNT( ?page) > 1)
  }

UNION
# Rule_ID:63
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s (dcat:landingPage as ?p) ?o 
   WHERE {
     ?s a dcat:Dataset.
     ?s dcat:landingPage ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a foaf:Document}).
     BIND ("Dataset" AS ?Class_Name).
     BIND (63 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dcat:landingPage should be a foaf:Document." AS ?Rule_Description).
     BIND (concat("The dcat:Dataset ",str(?s)," has a dcat:landingPage which is not a foaf:Document.") AS ?Message).
   }
  }
  
UNION
# Rule_ID:64
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a dcat:Dataset.
     ?s dct:language ?o.
     FILTER(!isURI(?o)).
     BIND (dct:language AS ?p).
     BIND ("Dataset" AS ?Class_Name).
     BIND (64 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:language should be a resource." AS ?Rule_Description).
     BIND (concat("The dct:language ",str(?p)," is not a resource.") AS ?Message).
   }
  }

UNION
# Rule_ID:65
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s (dct:language as ?p) ?o
   WHERE {
     ?s a dcat:Dataset.
     ?s dct:language ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a dct:LinguisticSystem}).
     BIND ("Dataset" AS ?Class_Name).
     BIND (65 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:language should be a dct:LinguisticSystem." AS ?Rule_Description).
     BIND (concat("The dcat:Dataset ",str(?s)," has a dct:language property which is not a dct:LinguisticSystem.") AS ?Message).
   }
  }

UNION
# Rule_ID:66
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a adms:Identifier.
     FILTER(!EXISTS {?s skos:notation ?id}).
     BIND (rdf:type AS ?p).
     BIND (adms:Identifier AS ?o).
     BIND ("Identifier" AS ?Class_Name).
     BIND (66 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("skos:notation is a required property for adms:Identifier." AS ?Rule_Description).
     BIND (concat("The adms:Identifier ",str(?s)," does not have a skos:notation.") AS ?Message).
   }
  }

UNION
# Rule_ID:67
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s (adms:identifier as ?p) ?o 
   WHERE {
     ?s a dcat:Dataset.
     ?s adms:identifier ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a adms:Identifier}).
     BIND ("Dataset" AS ?Class_Name).
     BIND (67 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("adms:identifier should be a adms:Identifier." AS ?Rule_Description).
     BIND (concat("The dcat:Dataset ",str(?s)," has a adms:identifier property which is not a adms:Identifier.") AS ?Message).
   }
  }

UNION
# Rule_ID:68
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a dcat:Dataset.
     ?s dct:issued ?o.
     FILTER(!isLiteral(?o)).
     BIND (dct:issued AS ?p).
     BIND ("Dataset" AS ?Class_Name).
     BIND (68 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:issued should be literal." AS ?Rule_Description).
     BIND (concat("The dct:issued ",str(?p)," is not a literal.") AS ?Message).
   }
  }

UNION
# Rule_ID:69
  {SELECT ("Dataset" AS ?Class_Name) (69 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:issued has maximum cardinality of 1 for Dataset." AS ?Rule_Description) (concat("The dcat:Dataset ",str(?s)," has more than 1 dct:issued.") AS ?Message) ?s (rdf:type AS ?p) (dcat:Dataset AS ?o)
   WHERE {
     ?s a dcat:Dataset.
     ?s dct:issued ?issued.
   } GROUP BY ?s 
     HAVING (COUNT( ?issued) > 1)
  }

UNION
# Rule_ID:70
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a dcat:Dataset.
     ?s dct:spatial ?o.
     FILTER(!isURI(?o)).
     BIND (dct:spatial AS ?p).
     BIND ("Dataset" AS ?Class_Name).
     BIND (70 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:spatial should be resource." AS ?Rule_Description).
     BIND (concat("The dct:spatial ",str(?o)," is not a resource.") AS ?Message).
   }
  }

UNION
# Rule_ID:71
  {SELECT DISTINCT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s (dct:spatial as ?p) ?o 
   WHERE {
     ?s a dcat:Dataset.
     ?s dct:spatial ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a dct:Location}).
     BIND ("Dataset" AS ?Class_Name).
     BIND (71 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:spatial should be a dct:Location." AS ?Rule_Description).
     BIND (concat("The dct:spatial ",str(?o)," is not a dct:Location.") AS ?Message).
   }
  }

UNION
# Rule_ID:72
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s (dct:temporal as ?p) ?o 
   WHERE {
     ?s a dcat:Dataset.
     ?s dct:temporal ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a dct:PeriodOfTime}).
     BIND ("Dataset" AS ?Class_Name).
     BIND (72 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:temporal should be a dct:PeriodOfTime." AS ?Rule_Description).
     BIND (concat("dcat:Dataset ",str(?s)," does not have a dct:temporal property of type dct:PeriodOfTime.") AS ?Message).
   }
  }

UNION
# Rule_ID:73
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a dcat:Dataset.
     ?s dct:modified ?o.
     FILTER(!isLiteral(?o)).
     BIND (dct:modified AS ?p).
     BIND ("Dataset" AS ?Class_Name).
     BIND (73 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:modified should be a literal." AS ?Rule_Description).
     BIND (concat("dcat:modified ",str(?s)," is not a literal.") AS ?Message).
   }
  }

UNION
# Rule_ID:74
  {SELECT ("Dataset" AS ?Class_Name) (74 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:modified has maximum cardinality of 1 for Dataset." AS ?Rule_Description) (concat("The dcat:Dataset ",str(?s)," has more than 1 dct:modified.") AS ?Message) ?s (rdf:type AS ?p) (dcat:Dataset AS ?o)
   WHERE {
     ?s a dcat:Dataset.
     ?s dct:modified ?modified.
   } GROUP BY ?s 
     HAVING (COUNT( ?modified) > 1)
  }

UNION
# Rule_ID:75
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a dcat:Dataset.
     ?s owl:versionInfo ?o.
     FILTER(!isLiteral(?o)).
     BIND (owl:versionInfo AS ?p).
     BIND ("Dataset" AS ?Class_Name).
     BIND (75 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("owl:versionInfo should be a literal." AS ?Rule_Description).
     BIND (concat("owl:versionInfo ",str(?s)," is not a literal.") AS ?Message).
   }
  }

UNION
# Rule_ID:76
  {SELECT ("Dataset" AS ?Class_Name) (76 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("owl:versionInfo has maximum cardinality of 1 for Dataset." AS ?Rule_Description) (concat("The dcat:Dataset ",str(?s)," has more than 1 owl:versionInfo.") AS ?Message) ?s (rdf:type AS ?p) (dcat:Dataset AS ?o)
   WHERE {
     ?s a dcat:Dataset.
     ?s owl:versionInfo ?version.
   } GROUP BY ?s 
     HAVING (COUNT( ?version) > 1)
  }

UNION
# Rule_ID:77
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
    WHERE {
     ?s a dcat:Dataset.
     ?s adms:versionNotes ?o.
     FILTER(!isLiteral(?o)).
     BIND (adms:versionNotes AS ?p).
     BIND ("Dataset" AS ?Class_Name).
     BIND (77 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("adms:versionNotes should be literal." AS ?Rule_Description).
     BIND (concat("adms:versionNotes ",str(?s)," is not a literal.") AS ?Message).
   }
  }

UNION
# Rule_ID:79
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a dcat:Distribution.
     FILTER(!(EXISTS { ?s dcat:accessURL ?desc})).
     BIND (rdf:type AS ?p).
     BIND (dcat:Distribution AS ?o).
     BIND ("Distribution" AS ?Class_Name).
     BIND (79 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dcat:accessURL is a required property for Distribution." AS ?Rule_Description).
     BIND (concat("The dcat:Distribution ",str(?s)," does not have a dcat:accessURL property.") AS ?Message).
   }
  }

UNION
# Rule_ID:80
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a dcat:Distribution.
     ?s dcat:accessURL ?o.
     FILTER(!isURI(?o)).
     BIND (dcat:accessURL AS ?p).
     BIND ("Distribution" AS ?Class_Name).
     BIND (80 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dcat:accessURL should be a resource." AS ?Rule_Description).
     BIND (concat("The dcat:accessURL ",str(?s)," is not a resource.") AS ?Message).
   }
  }

UNION
# Rule_ID:81
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a dcat:Distribution.
     FILTER(!(EXISTS { ?s dct:description ?desc})).
     BIND (rdf:type AS ?p).
     BIND (dcat:Distribution AS ?o).
     BIND ("Distribution" AS ?Class_Name).
     BIND (81 AS ?Rule_ID).
     BIND ("warning" AS ?Rule_Severity).
     BIND ("dct:description is a recommended property for Distribution." AS ?Rule_Description).
     BIND (concat("The dcat:Distribution ",str(?s)," does not have a dct:description property.") AS ?Message).
   }
  }

UNION
# Rule_ID:82
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a dcat:Distribution.
     ?s dct:description ?o.
     FILTER(!isLiteral(?o)).
     BIND (dct:description AS ?p).
     BIND ("Distribution" AS ?Class_Name).
     BIND (82 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:description should be a literal." AS ?Rule_Description).
     BIND (concat("The dct:description ",str(?s)," is not a literal.") AS ?Message).
   }
  }

UNION
# Rule_ID:83
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a dcat:Distribution.
     FILTER(!(EXISTS { ?s dct:format ?desc})).
     BIND (rdf:type AS ?p).
     BIND (dcat:Distribution AS ?o).
     BIND ("Distribution" AS ?Class_Name).
     BIND (83 AS ?Rule_ID).
     BIND ("warning" AS ?Rule_Severity).
     BIND ("dct:format is a recommended property for Distribution." AS ?Rule_Description).
     BIND (concat("The dct:Distribution ",str(?s)," does not have a dct:format property.") AS ?Message).
   }
  }

UNION
# Rule_ID:84
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a dcat:Distribution.
     ?s dct:format ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a dct:MediaTypeOrExtent}).
     BIND ("Distribution" AS ?Class_Name).
     BIND (84 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:format should be a dct:MediaTypeOrExtent." AS ?Rule_Description).
     BIND (concat("The dct:format ",str(?s)," is not a dct:MediaTypeOrExtent.") AS ?Message).
   }
  }
  

UNION
# Rule_ID:85
  {SELECT ("Distribution" AS ?Class_Name) (85 AS ?Rule_ID) ("warning" AS ?Rule_Severity) ("dct:format has maximum cardinality of 1 for Catalog." AS ?Rule_Description) (concat("The dcat:Distribution ",str(?s)," has more than 1 dct:format.") AS ?Message) ?s (rdf:type AS ?p) (dcat:Distribution AS ?o)
   WHERE {
     ?s a dcat:Distribution.
     ?s dct:format ?format.
   } GROUP BY ?s 
     HAVING (COUNT( ?format) > 1)
  }

UNION
# Rule_ID:86
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a dcat:Distribution.
     FILTER(!(EXISTS { ?s dct:license ?desc})).
     BIND (rdf:type AS ?p).
     BIND (dcat:Distribution AS ?o).
     BIND ("Distribution" AS ?Class_Name).
     BIND (86 AS ?Rule_ID).
     BIND ("warning" AS ?Rule_Severity).
     BIND ("dct:license is a recommended property for Distribution." AS ?Rule_Description).
     BIND (concat("The dct:Distribution ",str(?s)," does not have a dct:license property.") AS ?Message).
   }
  }

UNION
# Rule_ID:87
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a dcat:Distribution.
     ?s dct:license ?o.
     FILTER(!isURI(?o)).
     BIND (dct:license AS ?p).
     BIND ("Distribution" AS ?Class_Name).
     BIND (87 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:license should be a resource." AS ?Rule_Description).
     BIND (concat("The dct:license ",str(?s)," is not a resource.") AS ?Message).
   }
  }

UNION
# Rule_ID:88
  {SELECT ("Distribution" AS ?Class_Name) (88 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:license has maximum cardinality of 1 for Catalog." AS ?Rule_Description) (concat("The dcat:Distribution ",str(?s)," has more than 1 dct:license.") AS ?Message) ?s (rdf:type AS ?p) (dcat:Distribution AS ?o)
   WHERE {
     ?s a dcat:Distribution.
     ?s dct:license ?lic.
   } GROUP BY ?s 
     HAVING (COUNT( ?lic) > 1)
  }

UNION
# Rule_ID:89
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a dcat:Distribution.
     ?s dct:byteSize ?o.
     FILTER(!isLiteral(?o)).
     BIND (dct:byteSize AS ?p).
     BIND ("Distribution" AS ?Class_Name).
     BIND (89 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:license should be a resource." AS ?Rule_Description).
     BIND (concat("The dct:license ",str(?s)," is not a resource.") AS ?Message).
   }
  }

UNION
# Rule_ID:90
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a dcat:Distribution.
     ?s dcat:downloadURL ?o.
     FILTER(!isURI(?o)).
     BIND (dcat:downloadURL AS ?p).
     BIND ("Distribution" AS ?Class_Name).
     BIND (90 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dcat:downloadURL should be a resource." AS ?Rule_Description).
     BIND (concat("The dcat:downloadURL ",str(?s)," is not a resource.") AS ?Message).
   }
  }

UNION
# Rule_ID:91
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a dcat:Distribution.
     ?s dcat:mediaType ?o.
     FILTER(!isURI(?o)).
     BIND (dcat:mediaType AS ?p).
     BIND ("Distribution" AS ?Class_Name).
     BIND (91 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dcat:mediaType should be a resource." AS ?Rule_Description).
     BIND (concat("The dcat:mediaType ",str(?s)," is not a resource.") AS ?Message).
   }
  }

UNION
# Rule_ID:92
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a dcat:Distribution.
     ?s dct:issued ?o.
     FILTER(!isLiteral(?o)).
     BIND (dct:issued AS ?p).
     BIND ("Distribution" AS ?Class_Name).
     BIND (92 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:issued should be literal." AS ?Rule_Description).
     BIND (concat("The dct:issued ",str(?s)," is not a literal.") AS ?Message).
   }
  }

UNION
# Rule_ID:93
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a dcat:Distribution.
     ?s dct:rights ?o.
     FILTER(!isURI(?o)).
     BIND (dct:rights AS ?p).
     BIND ("Distribution" AS ?Class_Name).
     BIND (93 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:rights should be a resource." AS ?Rule_Description).
     BIND (concat("The dct:rights ",str(?s)," is not a resource.") AS ?Message).
   }
  }

UNION
# Rule_ID:94
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a dcat:Distribution.
     ?s adms:status ?o.
     FILTER(!isURI(?o)).
     BIND (adms:status AS ?p).
     BIND ("Distribution" AS ?Class_Name).
     BIND (94 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("adms:status should be a resource." AS ?Rule_Description).
     BIND (concat("The adms:status ",str(?s)," is not a resource.") AS ?Message).
   }
  }

UNION
# Rule_ID:95
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a dcat:Distribution.
     ?s dct:title ?o.
     FILTER(!isLiteral(?o)).
     BIND (dct:title AS ?p).
     BIND ("Distribution" AS ?Class_Name).
     BIND (95 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:title should be a literal." AS ?Rule_Description).
     BIND (concat("The dct:title ",str(?s)," is not a literal.") AS ?Message).
   }
  }

UNION
# Rule_ID:96
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a dcat:Distribution.
     ?s dct:modified ?o.
     FILTER(!isLiteral(?o)).
     BIND (dct:modified AS ?p).
     BIND ("Distribution" AS ?Class_Name).
     BIND (96 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:modified should be a literal." AS ?Rule_Description).
     BIND (concat("The dct:modified ",str(?s)," is not a literal.") AS ?Message).
   }
  }

UNION
# Rule_ID:98
  {SELECT ("Agent" AS ?Class_Name) (98 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:type has maximum cardinality of 1 for Agent." AS ?Rule_Description) (concat("The dcat:Agent ", str(?s)," has more than 1 dct:type.") AS ?Message) ?s (rdf:type AS ?p) (foaf:Agent AS ?o)
   WHERE {
     ?s a foaf:Agent.
     ?s dct:type ?type.
   } GROUP BY ?s 
     HAVING (COUNT( ?type) > 1)
  }

UNION
# Rule_ID:99
  {SELECT ("Catalog" AS ?Class_Name) (99 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:isPartOf has maximum cardinality of 1 for Catalog." AS ?Rule_Description) (concat("The dcat:Catalog ", str(?s)," has more than 1 dct:isPartOf.") AS ?Message) ?s (rdf:type AS ?p) (dcat:Catalog AS ?o)
   WHERE {
     ?s a dcat:Catalog.
     ?s dct:isPartOf ?typ.
   } GROUP BY ?s 
     HAVING (COUNT( ?typ) > 1)
  }
  
UNION
# Rule_ID:100
  {SELECT ("Dataset" AS ?Class_Name) (100 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:accessRights has maximum cardinality of 1 for Dataset." AS ?Rule_Description) (concat("The dcat:Dataset ", str(?s)," has more than 1 dct:accessRights.") AS ?Message) ?s (rdf:type AS ?p) (dcat:Dataset AS ?o)
   WHERE {
     ?s a dcat:Dataset.
     ?s dct:accessRights ?rights.
   } GROUP BY ?s 
     HAVING (COUNT( ?rights) > 1)
  }

UNION
# Rule_ID:101
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s (dct:creator as ?p) ?o 
   WHERE {
     ?s a dcat:Dataset.
     ?s dct:creator ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a foaf:Agent}).
     BIND ("Dataset" AS ?Class_Name).
     BIND (101 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:creator should be a foaf:Agent." AS ?Rule_Description).
     BIND (concat("The dct:creator ",str(?o)," is not a foaf:Agent.") AS ?Message).
   }
  }
  
UNION
# Rule_ID:102
  {SELECT ("Dataset" AS ?Class_Name) (102 AS ?Rule_ID) ("warning" AS ?Rule_Severity) ("dct:creator has maximum cardinality of 1 for Dataset." AS ?Rule_Description) (concat("The dcat:Dataset ",str(?s)," has more than 1 dct:creator property.") AS ?Message) ?s (rdf:type AS ?p) (dcat:Dataset AS ?o)
   WHERE {
     ?s a dcat:Dataset.
     ?s dct:creator ?pub.
   } GROUP BY ?s
     HAVING (COUNT( ?pub) > 1)
  }
  
UNION
# Rule_ID:103
  {SELECT ("Dataset" AS ?Class_Name) (103 AS ?Rule_ID) ("warning" AS ?Rule_Severity) ("dct:type has maximum cardinality of 1 for Dataset." AS ?Rule_Description) (concat("The dcat:Dataset ",str(?s)," has more than 1 dct:type property.") AS ?Message) ?s (rdf:type AS ?p) (dcat:Dataset AS ?o)
   WHERE {
     ?s a dcat:Dataset.
     ?s dct:type ?pub.
   } GROUP BY ?s
     HAVING (COUNT( ?pub) > 1)
  }
  
UNION
# Rule_ID:104
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s (dct:type as ?p) ?o 
   WHERE {
     ?s a dcat:Dataset.
     ?s dct:type ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a skos:Concept}).
     BIND ("Dataset" AS ?Class_Name).
     BIND (104 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:type should be a skos:Concept." AS ?Rule_Description).
     BIND (concat("dcat:Dataset ",str(?s)," does not have a dct:type property of type skos:Concept.") AS ?Message).
   }
  } 

UNION
# Rule_ID:105
  {SELECT ("Distribution" AS ?Class_Name) (105 AS ?Rule_ID) ("warning" AS ?Rule_Severity) ("spdx:checksum has maximum cardinality of 1 for Catalog." AS ?Rule_Description) (concat("The dcat:Distribution ",str(?s)," has more than 1 spdx:checksum.") AS ?Message) ?s (rdf:type AS ?p) (dcat:Distribution AS ?o)
   WHERE {
     ?s a dcat:Distribution.
     ?s spdx:checksum ?checksum.
   } GROUP BY ?s 
     HAVING (COUNT( ?checksum) > 1)
  }
  
UNION
# Rule_ID:106
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     ?s a dcat:Distribution.
     ?s spdx:checksum ?o.
     FILTER(!EXISTS {?o a spdx:Checksum}).
     BIND (spdx:checksum AS ?p).
     BIND ("Distribution" AS ?Class_Name).
     BIND (106 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("spdx:checksum should be a spdx:Checksum." AS ?Rule_Description).
     BIND (concat("The spdx:checksum ",str(?s)," is not a spdx:Checksum.") AS ?Message).
   }
  }
   
UNION
# Rule_ID:107
  {SELECT ("Distribution" AS ?Class_Name) (107 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:issued has maximum cardinality of 1 for Distribution." AS ?Rule_Description) (concat("The dcat:Distribution ",str(?s)," has more than 1 dct:issued.") AS ?Message) ?s (rdf:type AS ?p) (dcat:Distribution AS ?o)
   WHERE {
     ?s a dcat:Distribution.
     ?s dct:issued ?lic.
   } GROUP BY ?s 
     HAVING (COUNT( ?lic) > 1)
  }

UNION
# Rule_ID:108
  {SELECT ("Distribution" AS ?Class_Name) (108 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:rights has maximum cardinality of 1 for Distribution." AS ?Rule_Description) (concat("The dcat:Distribution ",str(?s)," has more than 1 dct:rights.") AS ?Message) ?s (rdf:type AS ?p) (dcat:Distribution AS ?o)
   WHERE {
     ?s a dcat:Distribution.
     ?s dct:rights ?rig.
   } GROUP BY ?s 
     HAVING (COUNT( ?rig) > 1)
  }

UNION
# Rule_ID:109
  {SELECT ("Distribution" AS ?Class_Name) (109 AS ?Rule_ID) ("warning" AS ?Rule_Severity) ("adms:status has maximum cardinality of 1 for Distribution." AS ?Rule_Description) (concat("The dcat:Distribution ",str(?s)," has more than 1 adms:status property.") AS ?Message) ?s (rdf:type AS ?p) (dcat:Distribution AS ?o)
   WHERE {
     ?s a dcat:Distribution.
     ?s adms:status ?stat.
   } GROUP BY ?s
     HAVING (COUNT( ?stat) > 1)
 }

UNION
# Rule_ID:110
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s (adms:status as ?p) ?o 
   WHERE {
     ?s a dcat:Distribution.
     ?s adms:status ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a skos:Concept}).
     BIND ("Distribution" AS ?Class_Name).
     BIND (110 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("adms:status should be a skos:Concept." AS ?Rule_Description).
     BIND (concat("dcat:Distribution ",str(?s)," does not have a adms:status property of type skos:Concept.") AS ?Message).
   }
  }

UNION
# Rule_ID:111
  {SELECT ("Distribution" AS ?Class_Name) (111 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:modified has maximum cardinality of 1 for Distribution." AS ?Rule_Description) (concat("The dcat:Distribution ",str(?s)," has more than 1 dct:modified.") AS ?Message) ?s (rdf:type AS ?p) (dcat:Distribution AS ?o)
   WHERE {
     ?s a dcat:Distribution.
     ?s dct:modified ?rig.
   } GROUP BY ?s 
     HAVING (COUNT( ?rig) > 1)
  }
  
UNION
# Rule_ID:112
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     FILTER(!EXISTS {?s a dcat:Catalog}).
     BIND ("Catalog" AS ?Class_Name).
     BIND (112 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dcat:Catalog does not exist." AS ?Rule_Description).
     BIND (concat("The mandatory class dcat:Catalog does not exist.") AS ?Message).
   }
  }

UNION
# Rule_ID:113
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     FILTER(!EXISTS {?s a foaf:Agent}).
     BIND ("Agent" AS ?Class_Name).
     BIND (113 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("foaf:Agent does not exist." AS ?Rule_Description).
     BIND (concat("The mandatory class foaf:Agent does not exist.") AS ?Message).
   }
  }
  
UNION
# Rule_ID:114
   {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o 
   WHERE {
     FILTER(!EXISTS {?s a dcat:Dataset}).
     BIND ("Dataset" AS ?Class_Name).
     BIND (114 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dcat:Dataset does not exist." AS ?Rule_Description).
     BIND (concat("The mandatory class dcat:Dataset does not exist.") AS ?Message).
   }
  }

UNION
# Rule_ID:115
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Dataset.
     ?s dcat:theme ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a skos:Concept}).
     BIND (dcat:theme AS ?p).
     BIND ("Dataset" AS ?Class_Name).
     BIND (115 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dcat:theme should be a skos:Concept." AS ?Rule_Description).
     BIND (concat("The dcat:Dataset ",str(?s)," has a ",str(?o)," which is not a skos:Concept") AS ?Message).
   }
  }

UNION
# Rule_ID:118
  {SELECT ("LicenseDocument" AS ?Class_Name) (118 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:type has a maximum cardinality of 1 for dct:LicenseDocument" AS ?Rule_Description) (concat("The dct:LicenseDocument ", str(?s)," has more than 1 dct:type.") AS ?Message) ?s
   WHERE {
     ?s a dct:LicenseDocument.
     ?s dct:type ?lic.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
}

UNION
# Rule_ID:119
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:CatalogRecord.
     FILTER(!EXISTS {?s foaf:primaryTopic ?name}).
     BIND (rdf:type AS ?p).
     BIND (dcat:CatalogRecord AS ?o).
     BIND ("CatalogRecord" AS ?Class_Name).
     BIND (119 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("foaf:primaryTopic is a required property for Catalog Record." AS ?Rule_Description).
     BIND (concat("The dcat:CatalogRecord ",str(?s)," does not have a foaf:primaryTopic property.") AS ?Message).
   }
  }

UNION
# Rule_ID:120
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:CatalogRecord.
     FILTER(!EXISTS {?s dct:modified ?name}).
     BIND (rdf:type AS ?p).
     BIND (dcat:CatalogRecord AS ?o).
     BIND ("CatalogRecord" AS ?Class_Name).
     BIND (120 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:modified is a required property for Catalog Record." AS ?Rule_Description).
     BIND (concat("The dcat:CatalogRecord ",str(?s)," does not have a dct:modified property.") AS ?Message).
   }
  }
  
UNION
# Rule_ID:121
  {SELECT ("CatalogRecord" AS ?Class_Name) (121 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("foaf:primaryTopic has a maximum cardinality of 1 for dcat:CatalogRecord" AS ?Rule_Description) (concat("The dcat:CatalogRecord ", str(?s)," has more than 1 foaf:primaryTopic.") AS ?Message) ?s
   WHERE {
     ?s a dcat:CatalogRecord.
     ?s foaf:primaryTopic ?pt.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }
  
UNION
# Rule_ID:122
  {SELECT ("CatalogRecord" AS ?Class_Name) (122 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:modified has a maximum cardinality of 1 for dcat:CatalogRecord" AS ?Rule_Description) (concat("The dcat:CatalogRecord ", str(?s)," has more than 1 dct:modified.") AS ?Message) ?s
   WHERE {
     ?s a dcat:CatalogRecord.
     ?s dct:modified ?mod.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }
  
UNION
# Rule_ID:123
  {SELECT ("CatalogRecord" AS ?Class_Name) (123 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:conformsTo has a maximum cardinality of 1 for dcat:CatalogRecord" AS ?Rule_Description) (concat("The dcat:CatalogRecord ", str(?s)," has more than 1 dct:conformsTo.") AS ?Message) ?s
   WHERE {
     ?s a dcat:CatalogRecord.
     ?s dct:conformsTo ?mod.
  } GROUP BY ?s 
    HAVING (COUNT( ?s) > 1)
  }
  
UNION
# Rule_ID:124
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:CatalogRecord.
     ?s dct:conformsTo ?o.
     FILTER(!isURI(?o)).
     BIND (dct:type AS ?p)
     BIND ("CatalogRecord" AS ?Class_Name).
     BIND (124 AS ?Rule_ID).
     BIND ("warning" AS ?Rule_Severity).
     BIND ("dct:conformsTo should be a resource." AS ?Rule_Description).
     BIND (concat("The foaf:Agent ",str(?s)," should have a dct:conformsTo as a resource.") AS ?Message).
   }
  }
  
UNION
# Rule_ID:125
  {SELECT ("CatalogRecord" AS ?Class_Name) (125 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("adms:status has a maximum cardinality of 1 for dcat:CatalogRecord" AS ?Rule_Description) (concat("The dcat:CatalogRecord ", str(?s)," has more than 1 adms:status.") AS ?Message) ?s
   WHERE {
     ?s a dcat:CatalogRecord.
     ?s adms:status ?mod.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }
  
UNION
# Rule_ID:126
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:CatalogRecord.
     ?s adms:status ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a skos:Concept}).
     BIND (adms:status AS ?p).
     BIND ("CatalogRecord" AS ?Class_Name).
     BIND (126 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("adms:status should be a skos:Concept." AS ?Rule_Description).
     BIND (concat("The dcat:CatalogRecord ",str(?s)," has a ",str(?o)," which is not a skos:Concept.") AS ?Message).
   }
  }

UNION
# Rule_ID:127
  {SELECT ("CatalogRecord" AS ?Class_Name) (127 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:issued has a maximum cardinality of 1 for dcat:CatalogRecord" AS ?Rule_Description) (concat("The dcat:CatalogRecord ", str(?s)," has more than 1 dct:issued.") AS ?Message) ?s
   WHERE {
     ?s a dcat:CatalogRecord.
     ?s dct:issued ?mod.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }
  
UNION
# Rule_ID:128
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:CatalogRecord.
     ?s dct:source ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a dcat:CatalogRecord}).
     BIND (dct:source AS ?p).
     BIND ("CatalogRecord" AS ?Class_Name).
     BIND (128 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:source should be a dcat:CatalogRecord." AS ?Rule_Description).
     BIND (concat("dcat:CatalogRecord ",str(?s)," has a ",str(?o)," which is not a dcat:CatalogRecord.") AS ?Message).
   }
  }
  
UNION
# Rule_ID:129
  {SELECT ("CatalogRecord" AS ?Class_Name) (129 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:source has a maximum cardinality of 1 for dcat:CatalogRecord" AS ?Rule_Description) (concat("The dcat:CatalogRecord ", str(?s)," has more than 1 dct:source.") AS ?Message) ?s
   WHERE {
     ?s a dcat:CatalogRecord.
     ?s dct:source ?mod.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:131
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:CatalogRecord.
     ?s dct:language ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a dct:LinguisticSystem}).
     BIND ("CatalogRecord" AS ?Class_Name).
     BIND (131 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:language should be a dct:LinguisticSystem." AS ?Rule_Description).
     BIND (concat("The dct:language ",str(?o)," is not a dct:LinguisticSystem.") AS ?Message).
   }
  }

UNION
# Rule_ID:132
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a spdx:Checksum.
     FILTER(!EXISTS {?s spdx:algorithm ?name}).
     BIND (rdf:type AS ?p).
     BIND (spdx:Checksum AS ?o).
     BIND ("Checksum" AS ?Class_Name).
     BIND (132 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("spdx:algorithm is a required property for Checksum." AS ?Rule_Description).
     BIND (concat("The spdx:Checksum ",str(?o)," does not have a spdx:algorithm property.") AS ?Message).
   }
  }
  
UNION
# Rule_ID:133
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a spdx:Checksum.
     FILTER(!EXISTS {?s spdx:checksumValue ?name}).
     BIND (rdf:type AS ?p).
     BIND (spdx:Checksum AS ?o).
     BIND ("Checksum" AS ?Class_Name).
     BIND (133 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("spdx:checksumValue is a required property for Checksum." AS ?Rule_Description).
     BIND (concat("The spdx:Checksum ",str(?o)," does not have a spdx:checksumValue property.") AS ?Message).
   }
  }
  
UNION
# Rule_ID:134
  {SELECT ("Checksum" AS ?Class_Name) (134 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("spdx:algorithm has a maximum cardinality of 1 for spdx:Checksum." AS ?Rule_Description) (concat("The spdx:Checksum ", str(?s)," has more than 1 spdx:algorithm.") AS ?Message) ?s
   WHERE {
     ?s a spdx:Checksum.
     ?s spdx:algorithm ?mod.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:135
  {SELECT ("Checksum" AS ?Class_Name) (135 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("spdx:checksumValue has a maximum cardinality of 1 for spdx:Checksum." AS ?Rule_Description) (concat("The spdx:Checksum ", str(?s)," has more than 1 spdx:checksumValue.") AS ?Message) ?s
   WHERE {
     ?s a spdx:Checksum.
     ?s spdx:checksumValue ?mod.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }
  
UNION
# Rule_ID:136
  {SELECT ("PeriodOfTime" AS ?Class_Name) (136 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("schema:startDate has a maximum cardinality of 1 for dct:PeriodOfTime." AS ?Rule_Description) (concat("The dct:PeriodOfTime ", str(?s)," has more than 1 schema:startDate.") AS ?Message) ?s
   WHERE {
     ?s a dct:PeriodOfTime.
     ?s schema:startDate ?mod.
  } GROUP BY ?s 
    HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:137
  {SELECT ("PeriodOfTime" AS ?Class_Name) (137 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("schema:endDate has a maximum cardinality of 1 for dct:PeriodOfTime." AS ?Rule_Description) (concat("The dct:PeriodOfTime ", str(?s)," has more than 1 schema:endDate.") AS ?Message) ?s
   WHERE {
     ?s a dct:PeriodOfTime.
     ?s schema:endDate ?mod.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:138
  {SELECT DISTINCT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     ?s dct:license ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a dct:LicenseDocument}).
     BIND ("Catalog" AS ?Class_Name).
     BIND (138 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:license should be a dct:LicenseDocument." AS ?Rule_Description).
     BIND (concat("The dct:license ",str(?o)," is not a dct:LicenseDocument.") AS ?Message).
   }
  }

UNION
# Rule_ID:139
  {SELECT DISTINCT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     ?s dcat:themeTaxonomy ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a skos:ConceptScheme}).
     BIND (dcat:themeTaxonomy AS ?p).
     BIND ("Catalog" AS ?Class_Name).
     BIND (139 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dcat:themeTaxonomy should be a skos:ConceptScheme." AS ?Rule_Description).
     BIND (concat("The dcat:Catalog ",str(?s)," has a ",str(?o)," which is not a skos:ConceptScheme.") AS ?Message).
   }
  }

UNION
# Rule_ID:140
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     ?s dct:hasPart ?o.
     FILTER(!EXISTS {?o a dcat:Catalog}).
     BIND (dct:hasPart AS ?p).
     BIND ("Catalog" AS ?Class_Name).
     BIND (140 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:hasPart should be a dcat:Catalog." AS ?Rule_Description).
     BIND (concat("The dcat:Catalog ",str(?s)," has a ",str(?o)," which is not a dcat:Catalog.") AS ?Message).
   }
  }

UNION
# Rule_ID:141
  {SELECT DISTINCT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     ?s dct:isPartOf ?o.
     ?o ?pred ?val.
     FILTER(!EXISTS {?o a dcat:Catalog}).
     BIND (dct:isPartOf AS ?p).
     BIND ("Catalog" AS ?Class_Name).
     BIND (141 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:isPartOf should be a dcat:Catalog." AS ?Rule_Description).
     BIND (concat("The dcat:Catalog ",str(?s)," has a ",str(?o)," which is not a dcat:Catalog.") AS ?Message).
   }
  }

UNION
# Rule_ID:142
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:CatalogRecord.
     ?s foaf:primaryTopic ?o.
     FILTER(!EXISTS {?o a dcat:Dataset}).
     BIND ("CatalogRecord" AS ?Class_Name).
     BIND (142 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dcat:dataset should be a Dataset." AS ?Rule_Description).
     BIND (concat("The dcat:CatalogRecord",str(?s)," has a ",str(?o)," which is not a dcat:Dataset") AS ?Message).
   }
  }

UNION
# Rule_ID:143
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:CatalogRecord.
     ?s dct:modified ?o.
     FILTER(!isLiteral(?o)).
     BIND (dct:modified AS ?p).
     BIND ("CatalogRecord" AS ?Class_Name).
     BIND (143 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:modified should be a literal." AS ?Rule_Description).
     BIND (concat("The dct:modified ",str(?o)," is not a literal.") AS ?Message).
   }
  }

UNION
# Rule_ID:144
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:CatalogRecord.
     FILTER(!(EXISTS { ?s dct:conformsTo ?desc})).
     BIND (rdf:type AS ?p).
     BIND (dcat:CatalogRecord AS ?o).
     BIND ("CatalogRecord" AS ?Class_Name).
     BIND (144 AS ?Rule_ID).
     BIND ("warning" AS ?Rule_Severity).
     BIND ("dct:conformsTo is a recommended property for Catalog Record." AS ?Rule_Description).
     BIND (concat("The dcat:CatalogRecord ",str(?o)," does not have a dct:conformsTo property.") AS ?Message).
   }
  }

UNION
# Rule_ID:145
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:CatalogRecord.
     FILTER(!(EXISTS { ?s adms:status ?desc})).
     BIND (rdf:type AS ?p).
     BIND (adms:status AS ?o).
     BIND ("CatalogRecord" AS ?Class_Name).
     BIND (145 AS ?Rule_ID).
     BIND ("warning" AS ?Rule_Severity).
     BIND ("adms:status is a recommended property for Catalog Record." AS ?Rule_Description).
     BIND (concat("The dcat:CatalogRecord ",str(?o)," does not have a adms:status property.") AS ?Message).
   }
  }

UNION
# Rule_ID:146
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:CatalogRecord.
     FILTER(!(EXISTS { ?s dct:issued ?desc})).
     BIND (rdf:type AS ?p).
     BIND (dct:issued AS ?o).
     BIND ("CatalogRecord" AS ?Class_Name).
     BIND (146 AS ?Rule_ID).
     BIND ("warning" AS ?Rule_Severity).
     BIND ("dct:issued is a recommended property for Catalog Record." AS ?Rule_Description).
     BIND (concat("The dcat:CatalogRecord ",str(?o)," does not have a dct:issued property.") AS ?Message).
   }
  }

UNION
# Rule_ID:147
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:CatalogRecord.
     ?s dct:issued ?o.
     FILTER(!isLiteral(?o)).
     BIND (dct:issued AS ?p).
     BIND ("CatalogRecord" AS ?Class_Name).
     BIND (147 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:issued should be a literal." AS ?Rule_Description).
     BIND (concat("The dct:issued ",str(?o)," is not a literal.") AS ?Message).
   }
  }

UNION
# Rule_ID:148
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:CatalogRecord.
     ?s dct:description ?o.
     FILTER(!isLiteral(?o)).
     BIND (dct:description AS ?p).
     BIND ("CatalogRecord" AS ?Class_Name).
     BIND (148 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:description should be a literal." AS ?Rule_Description).
     BIND (concat("The dct:description ",str(?o)," is not a literal.") AS ?Message).
   }
  }

UNION
# Rule_ID:149
  {SELECT ?Class_Name ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:CatalogRecord.
     ?s dct:title ?o.
     FILTER(!isLiteral(?o)).
     BIND (dct:title AS ?p).
     BIND ("CatalogRecord" AS ?Class_Name).
     BIND (149 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:title should be a literal." AS ?Rule_Description).
     BIND (concat("The dct:title ",str(?o)," is not a literal.") AS ?Message).
   }
  }

}
}